# Importing the necessary libraries
import numpy as np


#------------Twitter US Airline Sentiment Dataset (No Hyperparameter)------------#
# svm model
svm_model_twitter_nh = {
    "accuracy": [76.82,76.82,76.82,76.82,76.82,76.82,76.82,76.82,76.82,76.82,
                 76.82,76.82,76.82,76.82,76.82,76.82,76.82,76.82,76.82,76.82],
    "precision": [0.73,0.73,0.73,0.73,0.73,0.73,0.73,0.73,0.73,0.73,
                  0.73,0.73,0.73,0.73,0.73,0.73,0.73,0.73,0.73,0.73],
    "recall": [0.66,0.66,0.66,0.66,0.66,0.66,0.66,0.66,0.66,0.66,
               0.66,0.66,0.66,0.66,0.66,0.66,0.66,0.66,0.66,0.66],
    "f1_score": [0.68,0.68,0.68,0.68,0.68,0.68,0.68,0.68,0.68,0.68,
                 0.68,0.68,0.68,0.68,0.68,0.68,0.68,0.68,0.68,0.68]
}

# naive bayes model
nb_model_twitter_nh = {
    "accuracy": [67.62,67.62,67.62,67.62,67.62,67.62,67.62,67.62,67.62,67.62,
                 67.62,67.62,67.62,67.62,67.62,67.62,67.62,67.62,67.62,67.62],
    "precision": [0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,
                  0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78],
    "recall": [0.43,0.43,0.43,0.43,0.43,0.43,0.43,0.43,0.43,0.43,
               0.43,0.43,0.43,0.43,0.43,0.43,0.43,0.43,0.43,0.43],
    "f1_score": [0.43,0.43,0.43,0.43,0.43,0.43,0.43,0.43,0.43,0.43,
                 0.43,0.43,0.43,0.43,0.43,0.43,0.43,0.43,0.43,0.43]
}

# random forest model
rf_model_twitter_nh = {
    "accuracy": [75.30,75.04,75.48,75.25,75.30,75.10,75.25,75.52,75.68,75.63,
                 75.16,75.03,75.26,75.31,75.15,75.30,75.23,75.51,75.04,75.67],
    "precision": [0.71,0.72,0.71,0.71,0.71,0.70,0.71,0.71,0.72,0.71,
                  0.71,0.70,0.71,0.71,0.71,0.71,0.71,0.71,0.70,0.71],
    "recall": [0.63,0.63,0.63,0.63,0.63,0.63,0.63,0.63,0.64,0.64,
               0.63,0.63,0.63,0.64,0.63,0.63,0.63,0.64,0.63,0.64],
    "f1_score": [0.66,0.66,0.66,0.66,0.66,0.66,0.66,0.66,0.66,0.67,
                 0.66,0.66,0.66,0.66,0.66,0.66,0.66,0.66,0.66,0.66]
}





#------------IMDb Movie Review Dataset (No Hyperparameter)------------#
# svm model
svm_model_imdb_nh = {
    "accuracy": [57.36,57.36,57.36,57.36,57.36,57.36,57.36,57.36,57.36,57.36,
                 57.36,57.36,57.36,57.36,57.36,57.36,57.36,57.36,57.36,57.36],
    "precision": [0.49,0.49,0.49,0.49,0.49,0.49,0.49,0.49,0.49,0.49,
                  0.49,0.49,0.49,0.49,0.49,0.49,0.49,0.49,0.49,0.49],
    "recall": [0.72,0.72,0.72,0.72,0.72,0.72,0.72,0.72,0.72,0.72,
               0.72,0.72,0.72,0.72,0.72,0.72,0.72,0.72,0.72,0.72],
    "f1_score": [0.33,0.33,0.33,0.33,0.33,0.33,0.33,0.33,0.33,0.33,
                 0.33,0.33,0.33,0.33,0.33,0.33,0.33,0.33,0.33,0.33]
}

# naive bayes model
nb_model_imdb_nh = {
    "accuracy": [50.43,50.43,50.43,50.43,50.43,50.43,50.43,50.43,50.43,50.43,
                 50.43,50.43,50.43,50.43,50.43,50.43,50.43,50.43,50.43,50.43],
    "precision": [0.49,0.49,0.49,0.49,0.49,0.49,0.49,0.49,0.49,0.49,
                  0.49,0.49,0.49,0.49,0.49,0.49,0.49,0.49,0.49,0.49],
    "recall": [0.67,0.67,0.67,0.67,0.67,0.67,0.67,0.67,0.67,0.67,
               0.67,0.67,0.67,0.67,0.67,0.67,0.67,0.67,0.67,0.67],
    "f1_score": [0.23,0.23,0.23,0.23,0.23,0.23,0.23,0.23,0.23,0.23,
                 0.23,0.23,0.23,0.23,0.23,0.23,0.23,0.23,0.23,0.23]
}

# random forest model
rf_model_imdb_nh = {
    "accuracy": [48.08,47.90,48.01,47.01,48.30,49.25,48.02,50.52,49.01,49.50,
                 46.98,49.06,50.61,46.80,49.13,47.38,49.36,47.46,47.24,49.35],
    "precision": [0.45,0.45,0.46,0.46,0.45,0.45,0.46,0.46,0.45,0.46,
                  0.46,0.45,0.45,0.45,0.46,0.46,0.46,0.46,0.46,0.46],
    "recall": [0.65,0.65,0.65,0.65,0.66,0.66,0.65,0.67,0.66,0.66,
               0.65,0.66,0.67,0.65,0.66,0.65,0.66,0.65,0.65,0.66],
    "f1_score": [0.33,0.32,0.33,0.31,0.32,0.33,0.32,0.32,0.32,0.32,
                 0.32,0.32,0.33,0.32,0.32,0.32,0.33,0.32,0.32,0.33]
}




# define a function to calculate mean, median and standard deviation for 
# each perfomance metric
def calculate_mean_median_sd(model_data, model_name):
    for metric, values in model_data.items():
        mean = np.mean(values)
        median = np.median(values)
        sd = np.std(values)

        # printing outputs
        print(f"{model_name} ({metric}):")
        print(f"Mean: {mean:.2f}")
        print(f"Median: {median:.2f}")
        print(f"Standard Deviation: {sd:.2f}")
        print()


# Perform calculations for each model on the datasets
calculate_mean_median_sd(svm_model_twitter_nh, "SVM (Twitter No Hyperparameter)")
calculate_mean_median_sd(nb_model_twitter_nh, "Naive Bayes (Twitter No Hyperparameter)")
calculate_mean_median_sd(rf_model_twitter_nh, "Random Forest (Twitter No Hyperparameter)")
calculate_mean_median_sd(svm_model_imdb_nh, "SVM (IMDb No Hyperparameter)")
calculate_mean_median_sd(nb_model_imdb_nh, "Naive Bayes (IMDb No Hyperparameter)")
calculate_mean_median_sd(rf_model_imdb_nh, "Random Forest (IMDb No Hyperparameter)")